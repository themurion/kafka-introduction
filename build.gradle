buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
        dependencies {
            classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.17.0"
        }
    }
}

plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "application"
}

version "0.1"
group "kafka.training"

apply plugin: "com.commercehub.gradle.plugin.avro"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

avro {
    createSetters = false
    fieldVisibility = 'PRIVATE'
    stringType = 'String'
    enableDecimalLogicalType = true
    dateTimeLogicalType = 'JSR310'
}
dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-management"

    // implementation "io.micronaut.configuration:micronaut-kafka"

    // Kafka Dependencies
    implementation 'org.apache.kafka:kafka-clients:2.3.0'
    implementation 'org.apache.kafka:kafka-streams:2.3.0'

    // Avro + Serializers for it
    implementation 'org.apache.avro:avro:1.9.0'
    implementation 'io.confluent:kafka-avro-serializer:5.3.0'

    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

mainClassName = "kafka.training.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
